import { Prisma } from '@prisma/client';
import { DeleteBulkDto } from 'src/common/dto/delete-bulk';
import { IParamsSort } from 'src/common/types/sort';
import { PrismaService } from 'src/prisma.service';
import { S3Service } from 'src/s3.service';
import { CreateBannerDto } from './dto/create-banner.dto';
import { UpdateBannerDto } from './dto/update-banner.dto';
import { ISortBanners } from './types/sort';
export declare class BannersService {
    private prisma;
    private S3Service;
    constructor(prisma: PrismaService, S3Service: S3Service);
    getAll(title?: string, isActive?: boolean, sortBy?: ISortBanners, sort?: IParamsSort, limit?: number, page?: number): Promise<{
        page: number;
        limit: number;
        totalCount: number;
        totalResult: number;
        result: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string | null;
            title: string;
            link: string | null;
            imageLG: string;
            imageMD: string;
            imageSM: string;
            textColor: string | null;
            buttonBG: string | null;
            buttonTextColor: string | null;
            startDate: Date | null;
            endDate: Date | null;
            isActive: boolean;
            position: number;
        }[];
    }>;
    getOne(id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        title: string;
        link: string | null;
        imageLG: string;
        imageMD: string;
        imageSM: string;
        textColor: string | null;
        buttonBG: string | null;
        buttonTextColor: string | null;
        startDate: Date | null;
        endDate: Date | null;
        isActive: boolean;
        position: number;
    }>;
    create(dto: CreateBannerDto): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        title: string;
        link: string | null;
        imageLG: string;
        imageMD: string;
        imageSM: string;
        textColor: string | null;
        buttonBG: string | null;
        buttonTextColor: string | null;
        startDate: Date | null;
        endDate: Date | null;
        isActive: boolean;
        position: number;
    }>;
    update(dto: UpdateBannerDto, id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        title: string;
        link: string | null;
        imageLG: string;
        imageMD: string;
        imageSM: string;
        textColor: string | null;
        buttonBG: string | null;
        buttonTextColor: string | null;
        startDate: Date | null;
        endDate: Date | null;
        isActive: boolean;
        position: number;
    }>;
    delete(id: string): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        title: string;
        link: string | null;
        imageLG: string;
        imageMD: string;
        imageSM: string;
        textColor: string | null;
        buttonBG: string | null;
        buttonTextColor: string | null;
        startDate: Date | null;
        endDate: Date | null;
        isActive: boolean;
        position: number;
    }>;
    deleteBulk({ ids }: DeleteBulkDto): Promise<Prisma.BatchPayload>;
}
